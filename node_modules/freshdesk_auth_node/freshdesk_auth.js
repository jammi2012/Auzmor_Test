'use strict';

var crypto = require('crypto');
var jwt = require('jsonwebtoken');
const EXPIRES_IN = 20; //20 seconds
const ISSUER = 'FreshdeskAuth';

var FreshdeskAuth = function(key) {
  this.key = key;
}

FreshdeskAuth.prototype.digest = function(source) {
  var md5 = crypto.createHmac('md5', this.key);
  md5.update(source);
  return 'Freshdesk ' + md5.digest('hex');
}

FreshdeskAuth.prototype.isValid = function(source, hash) {
  var computed = this.digest(source);
  if(computed === hash) {
    return true;
  }
  return false;
}

// params can be => { secret: 'token', exp: 10, iss: 'fd'}
var JwtAuth = function(jwtParams) {
  this.jwtParams = jwtParams;
}

JwtAuth.prototype.generateJwtToken = function(data, exp, cb) {
  jwt.sign(
    data,
    this.jwtParams.secret,
    { expiresIn :  exp || this.jwtParams.exp || EXPIRES_IN,
      issuer : this.jwtParams.iss || ISSUER
    },
    cb
  );
}

JwtAuth.prototype.verify = function(token, cb) {
  jwt.verify(token, this.jwtParams.secret, cb);
}

module.exports = {
  fdAuth: FreshdeskAuth,
  jwtAuth: JwtAuth
}
